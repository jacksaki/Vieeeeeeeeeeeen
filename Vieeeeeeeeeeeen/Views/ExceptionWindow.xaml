<mahApps:MetroWindow
    x:Class="Vieeeeeeeeeeeen.Views.ExceptionWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
    xmlns:mahApps="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:v="clr-namespace:Vieeeeeeeeeeeen.Views"
    xmlns:vm="clr-namespace:Vieeeeeeeeeeeen.ViewModels"
    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
    xmlns:wpf1="http://materialdesigninxaml.net/winfx/xaml/themes"
    Title="エラー"
    Width="525"
    Height="350"
    v:DialogCloser.DialogResult="{Binding DialogResult}"
    Background="{DynamicResource MaterialDesignPaper}"
    BorderThickness="1"
    FontFamily="pack:application,,,/MaterialDesignThemes.Wpf;conponent/Resources/Roboto/#Roboto"
    GlowBrush="{DynamicResource AccentColorBrush}"
    TextElement.FontSize="18"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    TitleCharacterCasing="Normal">

    <Window.DataContext>
        <vm:ExceptionWindowViewModel />
    </Window.DataContext>

    <b:Interaction.Triggers>

        <!--  Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう  -->
        <!--  Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります  -->
        <!--  Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています  -->

        <!--  WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます  -->
        <b:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodName="Initialize" MethodTarget="{Binding}" />
        </b:EventTrigger>

        <!--  Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます  -->
        <b:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </b:EventTrigger>

        <!--  WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください  -->
    </b:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TextBlock
            Margin="6"
            Foreground="Red"
            Text="エラーが発生しました。システムへご連絡ください" />
        <Border
            Grid.Row="1"
            Margin="10"
            BorderBrush="Black"
            BorderThickness="1">
            <TextBox
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                AcceptsReturn="True"
                AcceptsTab="True"
                IsReadOnly="True"
                Text="{Binding ErrorText, Mode=OneWay}"
                VerticalScrollBarVisibility="Visible" />
        </Border>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button
                Grid.Column="1"
                Margin="5"
                HorizontalAlignment="Center"
                Command="{Binding ContinueCommand}">
                <TextBlock Text="継続" />
            </Button>
            <Button
                Grid.Column="2"
                Margin="5"
                HorizontalAlignment="Center"
                Command="{Binding QuitCommand}">
                <TextBlock Text="終了" />
            </Button>
        </Grid>
    </Grid>
</mahApps:MetroWindow>
